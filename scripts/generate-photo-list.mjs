import { readdirSync, statSync } from 'fs';
import { join } from 'path';

const publicDir = join(process.cwd(), 'public');
const files = readdirSync(publicDir);
const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp'];
const photoFiles = [];

for (const file of files) {
  const filePath = join(publicDir, file);
  if (statSync(filePath).isDirectory()) continue;
  const ext = file.slice(file.lastIndexOf('.')).toLowerCase();
  if (imageExtensions.includes(ext)) {
    photoFiles.push(file);
  }
}

const uniqueFiles = Array.from(new Set(photoFiles)).sort();

const outputPath = join(process.cwd(), 'src', 'data', 'photoList.ts');
const fileContent = `// This file is auto-generated by scripts/generate-photo-list.ts\n` +
  `export const photoList = [\n` +
  uniqueFiles.map(f => `  '/${f}',`).join('\n') +
  `\n] as const;\n`;

await import('fs/promises').then(fs => fs.writeFile(outputPath, fileContent));
console.log(`Generated ${outputPath} with ${uniqueFiles.length} photos.`);
